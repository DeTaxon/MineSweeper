//TODO check what cause memory overuse



SweeperNuklear := class extend SimpleWindow
{
	unknownPlace := void^
	pressedPlace := void^
	pressedMinePlace := void^
	pressedMineDefused := void^

	SizeX := int
	SizeY := int

	firstPress := bool

	mineField := MineField
	mineFieldView := MineFieldView^

	thisFont := Font^
	
	InitWindow := virtual !() -> GUIObject^
	{
		thisFont = CreateFont(FSGetFile("Goldman-Regular.ttf"),32)

		ClearColor = vec4f(208 / 255, 220 / 255, 133 / 255,1.0)
		mineFieldView = new MineFieldView(this&,15,15)

		testButton := new NkButton(this&,0,40,"Test",thisFont)

		resetButton := new NkButton(this&,0,40,"Reset",thisFont)
		lay := new LayoutHorizontal(![
			new LayoutSpacer("",0),
			new LayoutVertical(![
				new LayoutSpacer("static",20),
				resetButton,
				testButton,
				new LayoutSpacer("static",20),
				mineFieldView
			]),
			new LayoutSpacer("",0)
		])

		resetButton.SetPressCallback(() ==> {
			ResetField()
			mineFieldView.UpdateGPUField()
			RedrawWindow()
		})

		testButton.SetPressCallback(() ==> {

			
			while mineField.StepSolve() != 0
			{
			}
			mineFieldView.UpdateGPUField()
			RedrawWindow()
		})
		return lay
	}
	InitField := !(int dimX, int dimY) -> void
	{
		SizeX = dimX
		SizeY = dimY

		mineField.Resize(dimX,dimY)

		ResetField()
	}

	ResetField := !() -> void
	{
		firstPress = true

		mineField.CleanField()
	}


}



main := !(char^[] args) -> void
{
	w := new SweeperNuklear(700,700,"MineSweeper")
	w.InitField(15,15)
	w.SetFPSLimit(30)
	w.Run()
}
