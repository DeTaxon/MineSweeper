//TODO check what cause memory overuse

//level x y count
//easy 9 9 10
//normal 16 16 40
//expert 30 16 99

SweeperNuklear := class extend SimpleWindow
{
	unknownPlace := void^
	pressedPlace := void^
	pressedMinePlace := void^
	pressedMineDefused := void^

	firstPress := bool

	mineField := MineField
	mineFieldView := MineFieldView^

	thisFont := Font^
	
	InitWindow := virtual !() -> GUIObject^
	{
		thisFont = CreateFont(FSGetFile("Goldman-Regular.ttf"),32)

		goBack := vkOverlay.CreateButton(0,40,"Go Back",thisFont)

		layoutSettings := new LayoutVertical(![
			new LayoutHorizontal(![
				vkOverlay.CreateButton(0,40,"Easy",thisFont, () ==> [this&] { this.SetField(9,9,10)}),
				new LayoutSpacer("static",5)
				vkOverlay.CreateButton(0,40,"Normal",thisFont, () ==> [this&] { this.SetField(16,16,40)}),
				new LayoutSpacer("static",5),
				vkOverlay.CreateButton(0,40,"Hard",thisFont, () ==> [this&]{ this.SetField(30,16,99)})
			])
		])

		ClearColor = vec4f(208 / 255, 220 / 255, 133 / 255,1.0)
		mineFieldView = new MineFieldView(this&)

		settings := vkOverlay.CreateButton(0,40,"settings",thisFont)
		tabs := vkOverlay.CreateLayoutTabs(![
				mineFieldView
				layoutSettings
		])

		resetButton := vkOverlay.CreateButton(0,40,"Reset",thisFont)
		lay := new LayoutHorizontal(![
			new LayoutSpacer("",0),
			new LayoutVertical(![
				new LayoutSpacer("static",20),
				new LayoutHorizontal(![
					resetButton,
					new LayoutSpacer("static",5),
					settings
				]),
				new LayoutSpacer("static",20),
				tabs
			]),
			new LayoutSpacer("",0)
		])

		settings.SetPressCallback(() ==> {
			tabs.NextTab()
		})

		resetButton.SetPressCallback(() ==> {
			ResetField()
			mineFieldView.UpdateGPUField()
			RedrawWindow()
		})

		return lay
	}
	SetField := !(int dimX, int dimY,int mineCount) -> void
	{
		mineField.Resize(dimX,dimY,mineCount)
		mineFieldView.ResetSize()
		mineFieldView.UpdateGPUField()
		ResetField()
		RedrawWindow()
	}

	ResetField := !() -> void
	{
		firstPress = true

		mineField.CleanField()
	}


}



main := !(char^[] args) -> void
{
	w := new SweeperNuklear(700,700,"MineSweeper")
	w.SetField(10,10,10)
	w.SetFPSLimit(30)
	w.Run()
}
